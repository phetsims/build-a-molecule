
Build a Molecule
====================

✓ Indicates completed - Explanation presented as - { EXPLANATION } if needed

✓Logging    (strippable)
✓Assertions (strippable)

✓Fix BucketFront colors - seems to be hue shifting
✓CollectionList/KitCollection - consider using createObservableArray instead?
    - { Modules are responsible for more than ObservableArrayDef can handle }

✓Check usages of getFirstTargetBox for handling undefined instead of null as a negative result
    - { No more usages }
✓Memory:
  ✓Atoms are storing too much info in their instances from their Element. It's convenient, but probably killing us.
        - { Memory usage is tracked in issues BAM#38 and BAM#115 }
✓Performance:
  ✓ES5 getter/setter removal from inner-loop code
    - { ES6 conversion BAM#92 }

✓Specify sim title string for Sim

✓Common code for:
  HashMap
  Set
  - { Not required for publication }

✓Preloader
✓Support portrait and landscape?
    - { No issue reported by QA }
✓Full serialization?
✓Zoom/pan handler prototype
  - { Not required for publication }
✓Recycling bin for molecules/atoms?
✓Handling hard-to-touch things:
  ✓Scissors? - single-finger would interact with panning if zoomed in, might be acceptable
  ✓3D button / break apart button - not sure

✓"Model":
  Tabs:
    Play area bounds
    Kit area bounds
    
    CollectionList:
      currentCollection
      
      KitCollections:
        currentKit
        
        Kits:
          Buckets:
            element
            atom ids
            position
          
        ColectionBoxes:
          moleculeType
          capacity
          quantity
          molecules
        
        Atoms:
          id
          element
          position
          destination
          userControlled
          visible
        
        Molecules:
          id
          cid
          atom ids


Until we have dependencies.txt inserted, here is the 0.0.0-rc0 working snapshot:

# build-a-molecule 0.0.0-rc0 Tue Sep 10 02:19:37 MDT 2013
build-a-molecule d6698ad7c8f35b010e1c76bf30f36c309fbc3584
assert 8b4caae26fcee2870e0664147e6131e634b928a1
axon c8f4b283e8cea046775a0e6b5c3d2e3fcfa8abc7
dot 5400906c580023b672a93787b2465e22ba783efe
joist c552531e753f779dfdafdf70dd016222f0f26697
kite 55da7a2ec875fec3b314aab63f9016d86bd725b6
nitroglycerin dd991b442b12f4c5f5aa2c258a968c1a345b9753
phet-core ac56848a65a56b78dcde58fc1d00869b925fd17a
phetcommon 7f8a8eba555466739a8bd2f04f0caf4acc2e28b3
scenery 3c29b4a3397184d8962a18246aace0542b1a5b29
scenery-phet df85663086f767d2ebadb5bb57620b1383d40658
sun ad1acb423a818ec71bf2d7bf67e91856e4fa3b05
chipper d3c4b928f5886c84d102fe0f2ab2a3e2d73b7709
